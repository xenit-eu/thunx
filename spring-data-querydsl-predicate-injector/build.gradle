plugins {
    id 'java-library'
    id 'maven-publish'
}

dependencies {
    internalPlatform platform(project(':thunx-dependencies'))

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    api 'com.querydsl:querydsl-core'
    api 'org.springframework:spring-core'

    implementation 'org.springframework.data:spring-data-rest-webmvc'

    compileOnly("org.springframework.boot:spring-boot-autoconfigure") {
        because 'used for autoconfiguration annotations'
    }

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testAnnotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    testAnnotationProcessor 'com.querydsl:querydsl-apt::jakarta'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-rest'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'com.querydsl:querydsl-jpa::jakarta'

    testImplementation "org.assertj:assertj-core"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testRuntimeOnly 'org.postgresql:postgresql'
}

test {
    useJUnitPlatform()
}
